# Generated by Django 3.2.7 on 2021-10-08 21:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(help_text='Введите электронную почту', max_length=255, unique=True, verbose_name='Электронная почта')),
                ('username', models.CharField(help_text='Введите имя пользователя', max_length=255, unique=True, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(help_text='Введите имя пользователя', max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Введите фамилию пользователя', max_length=255, verbose_name='Фамилия')),
                ('is_active', models.BooleanField(default=True, help_text='Блокировка пользователя', verbose_name='Статус активности')),
                ('is_staff', models.BooleanField(default=False, help_text='Укажите статус пользователя', verbose_name='Статус администратора')),
                ('is_superuser', models.BooleanField(default=False, help_text='Указывает, есть ли у пользователя суперправа', verbose_name='Статус суперпользователя')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата регистрации пользователя', verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(help_text='Последнее посещение пользователя', null=True, verbose_name='Последнее посещение')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='Укажите автора', on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('subscriber', models.ForeignKey(help_text='Укажите подписчика автора', on_delete=django.db.models.deletion.CASCADE, related_name='subscriber', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.AddConstraint(
            model_name='subscribe',
            constraint=models.UniqueConstraint(fields=('author', 'subscriber'), name='unique_subscription'),
        ),
    ]
